---
layout: post
title:  "Making an RC Vaccum"
date:   2022-11-26 14:49:38 -0600
categories: Maker
---

So all of this started when I filed my first patent. This blog has nothing to _do_ with said patent, beyond it being ultimately part of a version 4 prototype, but this ridulous thing wouldn't exist without the patent. 

What is it? How did I do it? How many things did I fry in the process of making it? (Hint: far too many). These and all your other questions will be answered after the break.

----

<iframe width="720" height="480" src="https://www.youtube.com/embed/Bek-pxtkyso" frameborder="0" allowfullscreen></iframe>
---


Feel free to award internet points as appropriate.

üëèüëèüëèüëèüëèüëè
{: .iota}

Ultimately it may be better to say this started at a yard sale when I picked up this little vacuum for $20. I had no clue Hoover made robot vacuums and had a hope that Hoover wouldn't put too much work into them. This turned out to be a mid range model that had a suprising number of features and not great reviews. 

After snatching the little thing up it sat around for a few months until I decided exactly what I wanted to do with it. I ultimately ended up on making it the new platform for a room exploration prototype that's been in the works for a few years (and will eventually get its own blog post). Before going through the effort of taking the existing prototype apart, designing new platforms for everything to sit on and integrating it into this vacuum I wanted to kick the tires, and what better way to get a feel for the components than to get it working with an old Playstation controller so I can drive it around, vacuum some stuff up and try to improve its (currently) fairly sad performance. 

The first step to do all of this though was a good ol' fashioned 

## Teardown and part cataloging

Let's start with a nice before picture and then we'll get to the innards
![hoover_top](/assets/images/hoover_top.png)

And after a reasonable straightforward top removal we ended up with this:
![hoover_no_top](/assets/images/hoover_no_top.png)

The above photo leaves out the collector for dirt/dust/debris, the vacuum motor and a few bump sensors. Each sensor connects to the main board with a easy to remove plug and there weren't any gotchas during disassembly. 

I am in no way an expert at tearing things apart successfully, but I would give Hoover a ifixit (sometimes ibreakit) score of 9/10. Everything is included in a way that makes sense and there isn't anything that can't be taking out in a way that doesn't let you put it back in again. 

The brains of our little vacuum friend are a STM32F101, providing a pretty beefy chip for what it can do out of the box. 
![close up of stm32](/assets/images/stm_closeup.png)

For a bit I did go down the road of trying to read from the chip and possibly reprogram it with my own code (which would be _very_ nice since the board would give me connections to everything right away) but ultimately decided not too because:  
1) I couldn't get anything that made sense out of any of the open pins on the board 
2) I don't know enough about hardware to say for certain there wasn't some kind of protection in place for the chip and
3) This wasn't the particular rabbit hole I wanted to go down that day. 

I gave up and decided to replace the board with something else to drive everything, but since this vacuum is so easy to reassemble I set it aside to maybe come back and figure it out later. 


Contiuing on with the tear down! There are a lot of gooides in this little vacuum that would be easy to repurpose without too much trouble. Keeping in mind that the code would have to be reimplemented to get everything working it has nice components with plugs that include: 
- Motors with hall effects sensors 
![battery picture](/assets/images/motor_hall_effect.png)
- IR distance sensors 
- Bump sensors
- 2 12V motors 
- A 12V 2000mAh battery
![battery picture](/assets/images/hoover_battery.png)

Just having all of this would be worth the $20 I paid for it already, but every component has clip on connectors that make hooking them up to something else a _breeze_. 

With the teardown completed, the parts catalouged and the screws (mostly) stored somewhere safe it was time to 

## Figure out how this stuff works
I decided to spend most of my time focusing on how to get the motors working, since getting each motor to run on command would get the vacuum doing it's job of, uh... vacuuming. 

I couldn't find anything online to help me figure out how the motors worked beyond knowing they were normal DC motors (except the vacuum motor, which I'll get to in a bit). The two primary wheel motors each have a six pin connector with two powering the motor and the rest for the hall effect sensor. I used a multimeter to test the board as it was running and saw the voltage sat at around 5v consistently, and that _should_ be enough to trigger the motors so testing consisted of running 5V to each pin and seeing what turned the motor. I found the ground pin marked on the board attached to the motor, so it was just a matter of testing each pin to see when the motor responded. 

For this I used my trusty DIY bench top power supply. It's ain't pretty, but it works great for what I need.

![battery picture](/assets/images/hey_it_does_a_good_job.png)

Running 5V to two wires and testing each ping on the motor cable showed me the first two were what I needed. Pin 1 is ground, pin 2 is motor positive voltage. These were 12V motors, so I was able to run them up to 12 volts with no issues (and no smoke).

TODO
- Explain testing for brush motor
- Explain testing for vacuum motor
- Explain setup with Pi and Adafruit motor controller
- Explain code
- Wrap up

